# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Setup Java JDK
      uses: actions/setup-java@v3.1.0
      with:
        # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
        java-version: 
        # Java distribution. See the list of supported distributions in README file
        distribution: 
        # The package type (jdk, jre, jdk+fx, jre+fx)
        java-package: # optional, default is jdk
        # The architecture of the package
        architecture: # optional, default is x64
        # Path to where the compressed JDK is located
        jdkFile: # optional
        # Set this option if you want the action to check for the latest available version that satisfies the version spec
        check-latest: # optional
        # ID of the distributionManagement repository in the pom.xml file. Default is `github`
        server-id: # optional, default is github
        # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
        server-username: # optional, default is GITHUB_ACTOR
        # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
        server-password: # optional, default is GITHUB_TOKEN
        # Path to where the settings.xml file will be written. Default is ~/.m2.
        settings-path: # optional
        # Overwrite the settings.xml file if it exists. Default is "true".
        overwrite-settings: # optional, default is true
        # GPG private key to import. Default is empty string.
        gpg-private-key: # optional
        # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
        gpg-passphrase: # optional
        # Name of the build platform to cache dependencies. It can be "maven" or "gradle".
        cache: # optional
        # Workaround to pass job status to post job step. This variable is not intended for manual setting
        job-status: # optional, default is ${{ job.status }}
    - name: Install dependencies
      run: |
        sh antlr.sh
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
